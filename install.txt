1、安装 python 2.7.3
	[root@jw02 Python-2.7.3]# ./configure --prefix=/opt/python/
	[root@jw02 Python-2.7.3]# make && make install

2、安装 redis 2.4.15
	[root@jw02 software]# wget http://redis.googlecode.com/files/redis-2.4.15.tar.gz
	[root@jw02 software]# tar -zxvf redis-2.4.15.tar.gz 
	[root@jw02 software]# cd redis-2.4.15
	[root@jw02 redis-2.4.15]# make && make install
	[root@jw02 redis-2.4.15]# cp redis.conf /etc/	

3、配置 redis 
	[root@jw02 redis-2.4.15]# vim /etc/redis.conf 
	修改配置：
	daemonize yes	
	#save 900 1
	#save 300 10
	#save 60 10000

4、启动redis
	[root@jw02 etc]# /usr/local/bin/redis-server /etc/redis.conf 

5、安装python  setuptools
	[root@jw02 software]# tar -zxvf setuptools-0.6c11.tar.gz 
	[root@jw02 setuptools-0.6c11]# /opt/python/bin/python setup.py  install

6、安装redis-py
	[root@jw02 software]# wget https://github.com/downloads/andymccurdy/redis-py/redis-2.4.13.tar.gz
	[root@jw02 software]# tar -zxvf redis-2.4.13.tar.gz
	[root@jw02 software]# cd redis-2.4.13
	[root@jw02 redis-2.4.13]# /opt/python/bin/python setup.py install

7、安装MySQL-python
	[root@jw02 MySQL-python-1.2.3]# /opt/python/bin/python setup.py install

8、安装tornado
	[root@jw02 tornado-2.3]# /opt/python/bin/python setup.py install

9、安装nginx
	[root@jw02 software]# wget http://nginx.org/download/nginx-1.2.2.tar.gz
	[root@jw02 software]# tar -zxvf nginx-1.2.2.tar.gz
	[root@jw02 software]# cd nginx-1.2.2
	[root@jw02 nginx-1.2.2]# ./configure --prefix=/opt/nginx/
	[root@jw02 nginx-1.2.2]# make && make install

10、创建部署目录
	后台部署路径:/opt/app/sso/ssoadmin
	服务部署路径:/opt/app/sso/ssoservice

11、



[root@jw02 bin]# ln -s python2.7 python_ssoadmin
[root@jw02 bin]# ln -s python2.7 python_ssoservice






数据库修改:
CREATE TABLE `sso_oper_log` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `operID` int(11) DEFAULT NULL COMMENT '操作人ID',
  `operUserName` varchar(64) DEFAULT NULL COMMENT '操作人用户名',
  `operRealName` varchar(64) DEFAULT NULL COMMENT '操作人姓名',
  `appCode` varchar(32) DEFAULT NULL COMMENT '操作应用编号',
  `funcPath` varchar(1024) DEFAULT NULL COMMENT '功能path',
  `action` varchar(64) DEFAULT NULL COMMENT '动作',
  `targetType` int(11) DEFAULT NULL COMMENT '目标类型',
  `targetID` varchar(64) DEFAULT NULL COMMENT '目标ID',
  `startStatus` text COMMENT '原始状态',
  `endStatus` text COMMENT '结束状态',
  `operIp` varchar(64) DEFAULT NULL COMMENT '操作IP',
  `operTime` datetime DEFAULT NULL COMMENT '操作时间',
  PRIMARY KEY (`id`),
  KEY `index_sso_oper_log_operID` (`operID`),
  KEY `index_sso_oper_log_operUserName` (`operUserName`),
  KEY `index_sso_oper_log_appCode` (`appCode`),
  KEY `index_sso_oper_log_action` (`action`),
  KEY `index_sso_oper_log_operTime` (`operTime`),
  KEY `index_sso_oper_log_targetID` (`targetID`),
  KEY `index_sso_oper_log_operIp` (`operIp`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;



权限修改：
修改用户管理自定义Json配置为：[{"k":"Export","v":"导出用户数据"},{"k":"ResetPassword","v":"重置用户密码"}]
部门管理同级增加操作日志管理功能,编号为：OperLogManager，自定义json配置为：[{"k":"Export","v":"导出操作数据"}]

赋给相应角色权限进行测试



配置：
在 'exportUserPath' : 'app/static/export/user/', 下
增加一条：
'exportOperLogPath' : 'app/static/export/operlog/',

